role Server
role Client
role Authenticator

struct loginDetails { id : String ; password : String }

newtype login(Unit)

union authenticate { success : Unit ; error : String }

struct accountDetails { balance : Int ; overdraft : Int }

newtype account(accountDetails)

struct payDetails { payee : String ; amount : Int }

union cmd { pay : payDetails ; quit : Unit }

newtype msg(String)

protocol OnlineWallet
    = Client        ==> Authenticator | login(Unit)
    . Authenticator ==> Client [authenticate]
      { success (Unit)
        . Authenticator ==> Server |  msg(String)
        . Server        ==> Client | account(accountDetails)
          . rec(Loop)
            . Client ==> Server [cmd]
              { pay (payDetails)
                . call(Loop)
              | quit (Unit)
                . end
              }
      | error(String)
        . Authenticator ==> Server | msg(String)
        . end
      }


main (args : [String])
{
  print("My First Program")
; print(toString('\n'))

}
