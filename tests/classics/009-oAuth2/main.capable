role Service
role Client
role Auth

union logon { login  : Unit
            ; cancel : Unit
            }

newtype quit(Unit)

newtype pword(String)

newtype auth(Bool)

protocol oauthSimple
  = Service ==> Client [logon]
    { login(Unit)
      . Client ==> Auth    | pword(String)
      . Auth   ==> Service | auth(Bool)
      . end
    | cancel(Unit)
      . Client ==> Auth | quit(Unit)
      . end
    }

session auth <oauthSimple as Client> (pwd : String) -> Bool
{
  ?asa
}

main (args : [String])
{
  print("My First Program")
; print(toString('\n'))

}
