role S 
role C

union _220 { _220 : String }
union ehlo1 { quit0 : Unit ; ehlo1 : String }
union _250  { _250d  : String ; _250 : String }
union tls { quit1 : Unit ; tls : String }
union auth { quit2 : Unit ; auth : String }
union authd  { _535 : String ; _235  : String }
union mail  { quit3  : Unit ; mail : String }
union choice8  { _501  : String ; _2502 : String }

union rcpt { rcpt : String }
union data { data : String }

union _2503 { _2503 : String }
union _2504 { _2504 : String }

union _354 { _354 : String }
union cmd { dataLine : String ; subject : String ; endOfData : String} 
union to { to : String }
union from { from : String }

protocol SMTP = 
    S ==> C [_220] {_220 (String) . 
    C ==> S [ehlo1] { 
       quit0 (Unit) . end
     | ehlo1 (String) 
                    . rec (X) . S ==> C [_250] { _250d (String) . call (X)
                                               | _250  (String) . C ==> S [tls] { quit1(Unit) . end 
| tls(String) . C ==> S [_220]{_220(String) . C ==> S [ehlo1] {
    quit0 (Unit) . end 
  | ehlo1 (String) . rec (Y) . S ==> C [_250] { _250d (String) . call (Y)
| _250(String) . rec (Z) . C ==> S [auth] { quit2(Unit) . end 
                                            | auth(String) . S ==> C [authd] { _535(String) . call (Z) 
| _235(String) . rec (Z1) . C ==> S [mail]{ quit3(Unit). end
                                          | mail(String).  S ==> C [choice8] { _501(String). call (Z1)
| _2502(String). rec (Z2) . C ==> S [rcpt] {rcpt (String) . S ==> C [_2503] {_2503(String) 
    . C ==> S [data] {data(String) . S ==> C [_354] {_354(String) .  C ==> S [to] {to(String) 
    . C ==> S [from] {from(String) . rec (Z3) . C ==> S [cmd] { dataLine (String) . call (Z3)
                                                              | subject (String) . call (Z3)
                                                              | endOfData (String) . S ==> C [_2504] {_2504 (String).call(Z1)}
                                                              } 
                     }                     }}} }} } }} 

}}}}}}}}


main (args : [String])
{
  print("My First Program")
; print(toString('\n'))

}