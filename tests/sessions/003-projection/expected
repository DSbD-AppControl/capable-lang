Running Test
   ______                  __    __
  / ____/___ _____  ____ _/ /_  / /__
 / /   / __ `/ __ \/ __ `/ __ \/ / _ \
/ /___/ /_/ / /_/ / /_/ / /_/ / /  __/
\____/\__,_/ .___/\__,_/_.___/_/\___/
          /_/

  Version 0.0.0-unversioned
  https://github.com/DSbD-AppControl/capable-lang

  Type :? for help.

Capable> # Finished Parsing
# Finished Type Checking
Capable> (selects from Bob union {syn : Int} [ syn(Int)
                                      .(offers to Bob union {synack2 : (Int, Int, Int)} [ synack2((Int, Int, Int))
                                                                                          .(selects from Bob union {fin : (Int, Int, Int)} [ fin((Int, Int, Int))
                                                                                                                                             .End])])])
Capable> (offers to Alice union {syn : Int} [ syn(Int)
                                     .(selects from Charlie union {syn : Int} [ syn(Int)
                                                                                .(offers to Charlie union {synack : (Int, Int)} [ synack((Int, Int))
                                                                                                                                  .(selects from Alice union {synack2 : (Int, Int, Int)} [ synack2((Int, Int, Int))
                                                                                                                                                                                           .(offers to Alice union {fin : (Int, Int, Int)} [ fin((Int, Int, Int))
                                                                                                                                                                                                                                             .(selects from Charlie union {fin : (Int, Int, Int)} [ fin((Int, Int, Int))
                                                                                                                                                                                                                                                                                                    .End])])])])])])
Capable> (offers to Bob union {syn : Int} [ syn(Int)
                                   .(selects from Bob union {synack : (Int, Int)} [ synack((Int, Int))
                                                                                    .(offers to Bob union {fin : (Int, Int, Int)} [ fin((Int, Int, Int))
                                                                                                                                    .End])])])
Capable> Exiting the REPL
