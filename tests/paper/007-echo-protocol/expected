Running Test
# Finished Parsing
# Finished Type Checking
main.capable:47:3-0:
## Typing Context
i : String
## Recursion Vars

## Roles
+ Server
+ Client
---
rhs : rec(x).
        (sendTo[Server] { msg(union {Msg : String})
                          .(recvFrom[Server] {Msg(String).Call (x)})
        | quit(union {Msg : String}).(recvFrom[Server] {Msg(String).End}) })

# Finished Parsing
# Finished Type Checking
```
\begin{Verbatim}
\CapableKeyword{func} \CapableFunction{printLn} (\CapableBound{msg} : \CapableType{String}) -> \CapableType{Unit}
\{
  \CapableKeyword{print}(\CapableBound{msg});
  \CapableKeyword{print}(\CapableKeyword{toString}(\CapableValue{'\textbackslash{}n'}))
\}
\CapableKeyword{role} \CapableRole{Client}
\CapableKeyword{role} \CapableRole{Server}
\CapableKeyword{union} \CapableBound{Msg} \{\CapableBound{Msg} : \CapableType{String}\}
\CapableKeyword{union} \CapableBound{cmd} \{\CapableBound{msg} : \CapableType{\CapableBound{Msg}}; \CapableBound{quit} : \CapableType{\CapableBound{Msg}}\}
\CapableKeyword{protocol} \CapableProtocol{Echo}
  = \CapableKeyword{rec}(\CapableBound{x})
  . \CapableRole{Client} ==> \CapableRole{Server} [\CapableType{\CapableBound{cmd}}] \{ \CapableBound{msg}(\CapableType{\CapableBound{Msg}})
  . \CapableRole{Server} ==> \CapableRole{Client} [\CapableType{\CapableBound{Msg}}] \{ \CapableBound{Msg}(\CapableType{String})
  . \CapableKeyword{call}(\CapableBound{x})
  \}
  | \CapableBound{quit}(\CapableType{\CapableBound{Msg}})
  . \CapableRole{Server} ==> \CapableRole{Client} [\CapableType{\CapableBound{Msg}}] \{ \CapableBound{Msg}(\CapableType{String})
  . \CapableKeyword{end}
  \}
  \}
\CapableKeyword{session} \CapableBound{echoClient1} <\CapableProtocol{\CapableBound{Echo}} \CapableKeyword{as} \CapableRole{Client}> (\CapableBound{i} : \CapableType{String}) -> \CapableType{Bool}
\{
  \CapableKeyword{loop}(\CapableBound{x})
  \{
    \CapableKeyword{send} [\CapableType{\CapableBound{cmd}}] \CapableRole{Server} \CapableBound{msg}(\CapableFunction{\CapableBound{Msg}}(\CapableBound{i}))
      \CapableKeyword{catch}
      \{
        \CapableKeyword{crash}(\CapableValue{False})
      \}
    \CapableKeyword{recv} [\CapableType{\CapableBound{Msg}}] \CapableRole{Server}
    \{
      \CapableKeyword{when} Msg (Msg\_value)
      \{
        \CapableKeyword{call}(\CapableBound{x})
      \}
    \} \CapableKeyword{catch}
    \{
      \CapableKeyword{crash}(\CapableValue{False})
    \}
  \}
\}
\CapableKeyword{session} \CapableBound{echoClient} <\CapableProtocol{\CapableBound{Echo}} \CapableKeyword{as} \CapableRole{Client}> (\CapableBound{i} : \CapableType{String}) -> \CapableType{Bool}
\{
  \CapableHole{?\CapableBound{rhs}}
\}
\CapableBound{main} (\CapableBound{args} : \CapableType{[}\CapableType{String}\CapableType{]}) -> \CapableType{Unit}
\{
  \CapableKeyword{local} \CapableBound{val} = \CapableValue{"Hello World"} ;
  \CapableKeyword{if} \CapableKeyword{run} \CapableFunction{\CapableBound{echoClient}}(\CapableBound{val}) \CapableKeyword{with} [\CapableRole{Server} \CapableKeyword{as} \CapableValue{"python3 pingping.py"}]
  \{
    \CapableKeyword{print}(\CapableValue{"We echoed successfully."})
  \} \CapableKeyword{else}
  \{
    \CapableFunction{\CapableBound{printLn}}(\CapableValue{"Oops we crashed!"})
  \}
\}
\end{Verbatim}

```
